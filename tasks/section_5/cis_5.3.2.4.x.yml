---

# - name: "5.3.2.4.1 | PATCH | Ensure pam_unix does not include nullok"
#   when:
#     - suse15cis_rule_5_3_2_4_1
#     - suse15cis_disruption_high
#   tags:
#     - level1-server
#     - level1-workstation
#     - patch
#     - rule_5.3.2.4.1
#     - pam
#     - NIST800-53R5_NA
#   block:
#     - name: "5.3.2.4.1 | AUDIT | Ensure pam_unix does not include nullok | capture state"
#       ansible.builtin.command: pam-config --query --unix --unix-nullok
#       changed_when: false
#       failed_when: discovered_pam_nullok.rc not in [ 0, 1 ]
#       register: discovered_pam_nullok

#     - name: "5.3.2.4.1 | PATCH | Ensure pam_unix does not include nullok | Ensure nullok removed"
#       when:
#         - discovered_pam_nullok.stdout is defined
#         - "'null_ok' in discovered_pam_nullok.stdout"
#       ansible.builtin.command: pam-config -d --unix --unix-nullok
#       changed_when: true

- name: "5.3.2.4.2 | PATCH | Ensure pam_unix does not include remember"
  when:
    - suse15cis_rule_5_3_2_4_2
    - suse15cis_disruption_high
  tags:
    - level1-server
    - level1-workstation
    - patch
    - pam
    - rule_5.3.2.4.2
    - NIST800-53R5_NA
  block:
    - name: "5.3.2.4.2 | AUDIT | Ensure pam_unix does not include remember | capture state"
      ansible.builtin.shell: grep -PH -- '^\h*^\h*[^#\n\r]+\h+pam_unix\.so\b.*remember' /etc/pam.d/common-{password,password-pc,password.pam-config-backup}
      changed_when: false
      failed_when: discovered_pam_remember.rc not in [ 0, 1 ]
      register: discovered_pam_remember

    - name: "5.3.2.4.2 | PATCH | Ensure pam_unix does not include remember | Ensure remember removed"
      when:
        - discovered_pam_remember.stdout is defined
        - discovered_pam_remember.stdout | length > 0
      ansible.builtin.replace:
        path: "{{ item }}"
        regexp: remember=\d+
        replace: ''

- name: "5.3.2.4.3 | PATCH | Ensure pam_unix includes a strong password hashing algorithm"
  when:
    - suse15cis_rule_5_3_2_4_3
    - suse15cis_disruption_high
  tags:
    - level1-server
    - level1-workstation
    - patch
    - pam
    - rule_5.3.2.4.3
    - NIST800-53R5_IA-5
  block:
    - name: "5.3.2.4.3 | AUDIT | Ensure pam_unix includes a strong password hashing algorithm | capture state"
      ansible.builtin.command: "pam-config --query --unix --unix-{{ suse15cis_passwd_hash_algo }}"
      changed_when: false
      failed_when: discovered_pam_pwhash.rc not in [ 0, 1 ]
      register: discovered_pam_pwhash

    - name: "5.3.2.4.3 | PATCH | Ensure pam_unix includes a strong password hashing algorithm | Ensure hash algorithm set"
      when: discovered_pam_pwhash.stdout is not defined
      ansible.builtin.command: "pam-config -a --unix --unix-{{ suse15cis_passwd_hash_algo }}"
      changed_when: true

- name: "5.3.2.4.4 | PATCH | Ensure pam_unix includes use_authtok"
  when:
    - suse15cis_rule_5_3_2_4_4
  tags:
    - level1-server
    - level1-workstation
    - patch
    - pam
    - rule_5.3.2.4.4
    - NIST800-53R5_IA-5
  block:
    - name: "5.3.2.4.4 | PATCH | Ensure pam_unix includes use_authtok | capture state"
      ansible.builtin.shell: grep -PH -- '^\h*password\h+([^#\n\r]+)\h+pam_unix\.so\h+([^#\n\r]+\h+)?use_authtok\b' /etc/pam.d/common-{password,password-pc,password.pam-config-backup}
      changed_when: false
      failed_when: discovered_pam_authtok.rc not in [ 0, 1 ]
      register: discovered_pam_authtok

    - name: "5.3.2.4.4 | PATCH | Ensure pam_unix includes use_authtok | discover pam_files if not set"
      when: discovered_pam_authtok is not defined
      ansible.builtin.find:
        path: /etc/pam.d/
        patterns: common-password*

    - name: "5.3.2.4.4 | AUDIT | Ensure pam_unix includes use_authtok | configure pam_files if not set"
      when:
        - discovered_pam_authtok is not defined
        - discovered_pam_authtok | length > 0
      ansible.builtin.lineinfile:
        path: "{{ item.path }}"
        regexp: (\s*password\s+required\s+pam_unix\.so.*)\buse_authtok\b(.*)
        line: \1\2 use_authtok
        backrefs: true
