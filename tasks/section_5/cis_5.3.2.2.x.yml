---

- name: "5.3.2.2.1 | PATCH | Ensure password dictionary check is enabled"
  when: suse15cis_rule_5_3_2_2_6
  tags:
    - level1-server
    - level1-workstation
    - patch
    - rule_5.3.2.2.1
    - pam
    - NIST800-53R5_IA-5
  block:
    - name: "5.3.2.2.1 | PATCH | Ensure password dictionary check is enabled | Remove dictcheck settings from conf files"
      ansible.builtin.replace:
        path: "{{ item }}"
        regexp: 'dictcheck\s*=\s*\d+\b'
        replace: ''
      with_fileglob:
        - '/etc/security/pwquality.conf'
        - '/etc/security/pwquality.conf.d/*.conf'

    - name: "5.3.2.2.1 | AUDIT | Ensure password dictionary check is enabled | Check cracklib set in pam"
      when: suse15cis_use_pam_config
      ansible.builtin.command: pam-config -q -cracklib
      changed_when: false
      register: discovered_pam_dictcheck

    - name: "5.3.2.2.1 | PATCH | Ensure password dictionary check is enabled | Set cracklib in pam"
      when:
        - discovered_pam_dictcheck.stdout is defined
        - "'password' not in discovered_pam_dictcheck.stdout"
      ansible.builtin.command: pam-config -a -cracklib
      changed_when: true

- name: "5.3.2.2.2 | PATCH | Ensure password number of changed characters is configured"
  when:
    - suse15cis_rule_5_3_2_2_2
  tags:
    - level1-server
    - level1-workstation
    - patch
    - rule_5.3.2.2.2
    - pam
    - NIST800-53R5_IA-5
  block:
    - name: "5.3.2.2.2 | PATCH | Ensure password number of changed characters is configured | Remove difok from conf files except expected file"
      when:
        - not suse15cis_use_pam_config
        - item != suse15cis_passwd_difok_file
      ansible.builtin.replace:
        path: "{{ item }}"
        regexp: 'difok\s*=\s*\d+\b'
        replace: ''
      with_fileglob:
        - '/etc/security/pwquality.conf'
        - '/etc/security/pwquality.conf.d/*.conf'

    - name: "5.3.2.2.2 | PATCH | Ensure password number of changed characters is configured | Ensure difok file exists | not pam-config"
      when: not suse15cis_use_pam_config
      ansible.builtin.template:
        src: "{{ suse15cis_passwd_difok_file }}.j2"
        dest: "/{{ suse15cis_passwd_difok_file }}"
        owner: root
        group: root
        mode: 'go-rwx'

    - name: "5.3.2.2.2 | AUDIT | Ensure password number of changed characters is configured | check difok set in pam"
      when: suse15cis_use_pam_config
      ansible.builtin.command: pam-config -q -cracklib --cracklib-difok
      changed_when: false
      register: discovered_pam_difok

    - name: "5.3.2.2.2 | PATCH | Ensure password number of changed characters is configured | set difok in pam"
      when:
        - suse15cis_use_pam_config
        - discovered_pam_difok.stdout is defined
        - "'difok='suse15cis_passwd_difok_value not in discovered_pam_difok.stdout"
      ansible.builtin.command: pam-config -a --cracklib-difok={{ suse15cis_passwd_difok_value }}
      changed_when: true

- name: "5.3.2.2.3 | PATCH | Ensure minimum password length is configured"
  when: suse15cis_rule_5_3_2_2_2
  tags:
    - level1-server
    - level1-workstation
    - patch
    - rule_5.3.2.2.3
    - pam
    - NIST800-53R5_IA-5
  block:
    - name: "5.3.2.2.3 | PATCH | Ensure minimum password length is configured | Remove minlen from conf files except expected file"
      when: item != suse15cis_passwd_minlen_file
      ansible.builtin.replace:
        path: "{{ item }}"
        regexp: 'minlen\s*=\s*\d+\b'
        replace: ''
      with_fileglob:
        - '/etc/security/pwquality.conf'
        - '/etc/security/pwquality.conf.d/*.conf'

    - name: "5.3.2.2.3 | PATCH | Ensure minimum password length is configured | Ensure minlen file exists | not pam-config"
      when: not suse15cis_use_pam_config
      ansible.builtin.template:
        src: "{{ suse15cis_passwd_minlen_file }}.j2"
        dest: "/{{ suse15cis_passwd_minlen_file }}"
        owner: root
        group: root
        mode: 'go-rwx'

    - name: "5.3.2.2.3 | AUDIT | Ensure password number of changed characters is configured | check minlength set in pam"
      when: suse15cis_use_pam_config
      ansible.builtin.command: pam-config -q -cracklib --cracklib-minlen
      changed_when: false
      register: discovered_pam_minlen

    - name: "5.3.2.2.3 | PATCH | Ensure password number of changed characters is configured | set minlength in pam"
      when:
        - suse15cis_use_pam_config
        - discovered_pam_minlen.stdout is defined
        - "'minlen='suse15cis_passwd_minlen_value not in discovered_pam_minlen.stdout"
      ansible.builtin.command: pam-config -a --cracklib-minlen={{ suse15cis_passwd_minlen_value }}
      changed_when: true

- name: "5.3.2.2.4 | PATCH | Ensure password complexity is configured"
  when: suse15cis_rule_5_3_2_2_4
  tags:
    - level1-server
    - level1-workstation
    - patch
    - rule_5.3.2.2.4
    - pam
    - NIST800-53R5_IA-5
  block:
    - name: "5.3.2.2.4 | PATCH | Ensure password complexity is configured | Remove pwd complex settings from conf files except expected file"
      when: item != suse15cis_passwd_complex_file
      ansible.builtin.replace:
        path: "{{ item }}"
        regexp: '(minclass|[dulo]credit)\s*=\s*(-\d|\d+)\b'
        replace: ''
      with_fileglob:
        - '/etc/security/pwquality.conf'
        - '/etc/security/pwquality.conf.d/*.conf'

    - name: "5.3.2.2.4 | PATCH | Ensure password complexity is configured | Ensure complexity file exists | not pam-config"
      when: not suse15cis_use_pam_config
      ansible.builtin.template:
        src: "{{ suse15cis_passwd_complex_file }}.j2"
        dest: "/{{ suse15cis_passwd_complex_file }}"
        owner: root
        group: root
        mode: 'go-rwx'

    - name: "5.3.2.2.4 | AUDIT | Ensure password complexity is configured | check passwd complexity set in pam"
      when: suse15cis_use_pam_config
      ansible.builtin.command: pam-config -q -cracklib
      changed_when: false
      register: discovered_pam_complex

    - name: "5.3.2.2.4 | PATCH | Ensure password complexity is configured | set passwd_complexity in pam"
      when:
        - suse15cis_use_pam_config
        - discovered_pam_complex.stdout is defined
        - ("'minclass='suse15cis_passwd_minclass_value not in discovered_pam_complex.stdout" or "'ucredit='suse15cis_passwd_ucredit_value not in discovered_pam_complex.stdout")
      ansible.builtin.command: pam-config -a --cracklib-minclass={{ suse15cis_passwd_minclass_value }}
      changed_when: true

- name: "5.3.2.2.5 | PATCH | Ensure password same consecutive characters is configured"
  when: suse15cis_rule_5_3_2_2_5
  tags:
    - level1-server
    - level1-workstation
    - patch
    - rule_5.3.2.2.5
    - pam
    - NIST800-53R5_IA-5
  block:
    - name: "5.3.2.2.5 | PATCH | Ensure password same consecutive characters is configured | Remove maxrepeat settings from conf files except expected file"
      when: item != suse15cis_passwd_maxrepeat_file
      ansible.builtin.replace:
        path: "{{ item }}"
        regexp: 'maxrepeat\s*=\s*\d+\b'
        replace: ''
      with_fileglob:
        - '/etc/security/pwquality.conf'
        - '/etc/security/pwquality.conf.d/*.conf'

    - name: "5.3.2.2.5 | PATCH | Ensure password same consecutive characters is configured | Ensure maxrepeat file exists"
      ansible.builtin.template:
        src: "{{ suse15cis_passwd_maxrepeat_file }}.j2"
        dest: "/{{ suse15cis_passwd_maxrepeat_file }}"
        owner: root
        group: root
        mode: 'go-rwx'

    - name: "5.3.2.2.5 | PATCH | Ensure password same consecutive characters is configured | check passwd max repeat set in pam"
      when: suse15cis_use_pam_config
      ansible.builtin.command: pam-config -q -cracklib --cracklib-maxrepeat
      changed_when: false
      register: discovered_pam_maxrepeat

    - name: "5.3.2.2.5 | PATCH | Ensure password same consecutive characters is configured | set passwd_maxrepeat in pam"
      when:
        - suse15cis_use_pam_config
        - discovered_pam_maxrepeat.stdout is defined
        - "'maxrepeat='suse15cis_passwd_maxrepeat_value not in discovered_pam_maxrepeat.stdout"
      ansible.builtin.command: pam-config -a --cracklib-minclass={{ suse15cis_passwd_maxrepeat_value }}
      changed_when: true

- name: "5.3.2.2.6 | PATCH | Ensure password maximum sequential characters is configured"
  when: suse15cis_rule_5_3_2_2_6
  tags:
    - level1-server
    - level1-workstation
    - patch
    - rule_5.3.2.2.6
    - pam
    - NIST800-53R5_IA-5
  block:
    - name: "5.3.2.2.6 | PATCH | Ensure password maximum sequential characters is configured | Remove maxsequence settings from conf files except expected file"
      when: item != suse15cis_passwd_maxsequence_file
      ansible.builtin.replace:
        path: "{{ item }}"
        regexp: 'maxsequence\s*=\s*\d+\b'
        replace: ''
      with_fileglob:
        - '/etc/security/pwquality.conf'
        - '/etc/security/pwquality.conf.d/*.conf'

    - name: "5.3.2.2.6 | PATCH | Ensure password maximum sequential characters is configured | Ensure maxsequence file exists"
      ansible.builtin.template:
        src: "{{ suse15cis_passwd_maxsequence_file }}.j2"
        dest: "/{{ suse15cis_passwd_maxsequence_file }}"
        owner: root
        group: root
        mode: 'go-rwx'

    - name: "5.3.2.2.6 | PATCH | Ensure password maximum sequential characters is configured | check passwd max sequence set in pam"
      when: suse15cis_use_pam_config
      ansible.builtin.command: pam-config -q -cracklib --cracklib-maxsequence
      changed_when: false
      register: discovered_pam_maxsequence

    - name: "5.3.2.2.6 | PATCH | Ensure password maximum sequential characters is configured | set passwd_maxsequence in pam"
      when:
        - suse15cis_use_pam_config
        - discovered_pam_maxsequence.stdout is defined
        - "'maxsequence='suse15cis_passwd_maxsequence_value not in discovered_pam_maxsequence.stdout"
      ansible.builtin.command: pam-config -a --cracklib-maxsequence={{ suse15cis_passwd_maxsequence_value }}
      changed_when: true

- name: "5.3.2.2.7 | PATCH | Ensure password quality is enforced for the root user"
  when: suse15cis_rule_5_3_2_2_7
  tags:
    - level1-server
    - level1-workstation
    - patch
    - rule_5.3.2.2.8
    - pam
    - NIST800-53R5_IA-5
  block:
    - name: "5.3.2.2.7 | PATCH | Ensure password quality is enforced for the root user"
      ansible.builtin.template:
        src: "{{ suse15cis_passwd_quality_enforce_root_file }}.j2"
        dest: "/{{ suse15cis_passwd_quality_enforce_root_file }}"
        owner: root
        group: root
        mode: 'go-rwx'

    - name: "5.3.2.2.7 | PATCH | Ensure password quality is enforced for the root user | check enforce_for_root set in pam"
      when: suse15cis_use_pam_config
      ansible.builtin.command: pam-config -q -cracklib --cracklib-enforce_for_root
      changed_when: false
      register: discovered_pam_enforce_for_root

    - name: "5.3.2.2.7 | PATCH | Ensure password quality is enforced for the root user | set enforce_for_root in pam"
      when:
        - suse15cis_use_pam_config
        - discovered_pam_enforce_for_root.stdout is defined
        - "'enforce_for_root=suse15cis_passwd_quality_enforce_for_root_value not in discovered_pam_enforce_for_root.stdout"
      ansible.builtin.command: pam-config -a --cracklib-maxsequence={{ suse15cis_passwd_quality_enforce_for_root_value }}
      changed_when: true
